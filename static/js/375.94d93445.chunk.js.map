{"version":3,"file":"static/js/375.94d93445.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledContainer = styled.div`\n  max-width: 1200px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 50px 15px;\n\n  .link {\n    padding: 0 15px;\n    text-decoration: none;\n  }\n`;\n\nexport const StyledContainerList = styled.div`\n  display: flex;\n  gap: 30px;\n\n  width: 100%;\n  margin: 0 auto;\n  padding: 50px 15px;\n`;\n\nexport const StyledAdditional = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 50px 15px;\n\n  .list {\n    display: flex;\n    gap: 20px;\n    list-style-type: none;\n    padding: 0;\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  color: tomato;\n  border: 1px solid tomato;\n  border-radius: 10px;\n  display: inline-block;\n  padding: 15px;\n  font-size: 20px;\n  text-decoration: none;\n  margin-right: 15px;\n\n  transition: all 0.3s;\n\n  &.active {\n    border: 1px solid white;\n    background-color: tomato;\n    color: white;\n  }\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\nimport {\n  StyledAdditional,\n  StyledContainer,\n  StyledContainerList,\n  StyledNavLink,\n} from './MovieDetails.styled';\n\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const BaseImgUrl = 'https://image.tmdb.org/t/p/w400';\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movieById, setMovieById] = useState({});\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const findMovieDetail = async () => {\n      try {\n        setIsLoading(true);\n        const movieData = await fetchMovieDetails(movieId);\n        setMovieById(movieData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    findMovieDetail();\n  }, [movieId]);\n\n  const { title, poster_path, overview, genres } = movieById;\n\n  return (\n    <StyledContainer>\n      <Link to={backLinkHref.current} className=\"link\">\n        Go Back\n      </Link>\n\n      {isLoading && <Loader />}\n      {error && <p className=\"error\">{error}</p>}\n\n      {movieById && (\n        <StyledContainerList>\n          <img\n            src={poster_path ? `${BaseImgUrl}${poster_path}` : defaultImg}\n            alt={title}\n            width={500}\n          />\n          <div className=\"wrapper\">\n            <h1>{title}</h1>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            {genres && genres.length !== 0 ? (\n              <ul>\n                {genres.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ul>\n            ) : (\n              <p>We don't have any genres for this movie</p>\n            )}\n          </div>\n        </StyledContainerList>\n      )}\n\n      <StyledAdditional>\n        <h2>Additional Information</h2>\n        <ul className=\"list\">\n          <li>\n            <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n          </li>\n          <li>\n            <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n          </li>\n        </ul>\n      </StyledAdditional>\n\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </StyledContainer>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  // url: 'https://api.themoviedb.org/3/authentication',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3OTQ4NDU5YzkwODljZDQyY2Q1MzYwY2JiNWMxNmEwNiIsInN1YiI6IjY1MjgxNWE0Mzc4MDYyMDEzOWExMjI5NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.4tvuZQaDxtSX7MEVnQ8Z9bY5zeIDO3IhkSXhrJbyhgM',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?language=en-US`,\n    options\n  );\n  return data;\n};\n\nexport const fetchSearchedMovies = async queryMovieName => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${queryMovieName}`,\n    options\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}`,\n    options\n  );\n\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    options\n  );\n  return data;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n    options\n  );\n  return data;\n};\n"],"names":["StyledContainer","styled","StyledContainerList","StyledAdditional","StyledNavLink","NavLink","Cast","lazy","Reviews","location","useLocation","backLinkHref","useRef","state","from","movieId","useParams","useState","isLoading","setIsLoading","error","setError","movieById","setMovieById","useEffect","findMovieDetail","fetchMovieDetails","movieData","message","title","poster_path","overview","genres","to","current","className","Loader","src","alt","width","length","map","id","name","Suspense","fallback","path","element","options","method","headers","accept","Authorization","fetchTrendingMovies","axios","data","fetchSearchedMovies","queryMovieName","fetchCast","fetchReviews"],"sourceRoot":""}