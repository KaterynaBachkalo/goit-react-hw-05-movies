{"version":3,"file":"static/js/387.57331ffd.chunk.js","mappings":"oRAEaA,EAAaC,EAAAA,GAAAA,GAAH,6fAgCVC,EAAaD,EAAAA,GAAAA,EAAH,gD,SCiCvB,EA7Da,WACX,IAGQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CAEA,IAAMU,EAAe,mCAAG,oGAEpBJ,GAAa,GAFO,UAGIK,EAAAA,EAAAA,GAAUX,GAHd,OAGdY,EAHc,OAKpBR,EAAQQ,EAAUT,MALE,gDAOpBK,EAAS,KAAMK,SAPK,yBASpBP,GAAa,GATO,4EAAH,qDAarBI,GAfoB,CAgBrB,GAAE,CAACV,KAGF,2BACGK,IAAa,SAACS,EAAA,EAAD,IACbP,IAAS,cAAGQ,UAAU,QAAb,SAAsBR,IAEf,IAAhBJ,EAAKa,QACJ,SAACnB,EAAD,UACGM,EAAKc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,gBAAaN,UAAU,OAAvB,WAEI,gBACEO,IACEH,EAAY,UAvCX,mCAuCW,OAAmBA,GArC/C,8EAuCcI,IAAI,SACJC,MAAO,OAIX,iBAAKT,UAAU,UAAf,WACE,eAAIA,UAAU,QAAd,SAAuBK,KACvB,eAAGL,UAAU,OAAb,UAAoB,cAAYM,UAb3BH,EADD,OAoBZ,SAACnB,EAAD,UAAY,6CAInB,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  max-width: 1200px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 15px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n\n  .list {\n    width: 200px;\n    list-style-type: none;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n\n  .wrapper {\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    height: 70px;\n  }\n\n  .title,\n  .text {\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nexport const StyledText = styled.p`\n  padding: 0 0 0 40px;\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/api';\nimport { StyledList, StyledText } from './Cast.styled';\n\nconst Cast = () => {\n  const BaseImgUrl = 'https://image.tmdb.org/t/p/w200';\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const findMovieDetail = async () => {\n      try {\n        setIsLoading(true);\n        const movieData = await fetchCast(movieId);\n\n        setCast(movieData.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    findMovieDetail();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <p className=\"error\">{error}</p>}\n\n      {cast.length !== 0 ? (\n        <StyledList>\n          {cast.map(({ id, profile_path, name, character }) => (\n            <li key={id} className=\"list\">\n              {\n                <img\n                  src={\n                    profile_path ? `${BaseImgUrl}${profile_path}` : defaultImg\n                  }\n                  alt=\"poster\"\n                  width={200}\n                />\n              }\n\n              <div className=\"wrapper\">\n                <h3 className=\"title\">{name}</h3>\n                <p className=\"text\">Character: {character}</p>\n              </div>\n            </li>\n          ))}\n        </StyledList>\n      ) : (\n        <StyledText>We don't have any casts for this movie</StyledText>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["StyledList","styled","StyledText","movieId","useParams","useState","cast","setCast","isLoading","setIsLoading","error","setError","useEffect","findMovieDetail","fetchCast","movieData","message","Loader","className","length","map","id","profile_path","name","character","src","alt","width"],"sourceRoot":""}