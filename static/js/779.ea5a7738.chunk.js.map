{"version":3,"file":"static/js/779.ea5a7738.chunk.js","mappings":"yQAEaA,E,OAAaC,GAAAA,IAAH,kD,SCgDvB,EA5CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CAEA,IAAMU,EAAe,mCAAG,oGAEpBJ,GAAa,GAFO,UAGIK,EAAAA,EAAAA,IAAaX,GAHjB,OAGdY,EAHc,OAIpBR,EAAWQ,EAAUC,SAJD,gDAMpBL,EAAS,KAAMM,SANK,yBAQpBR,GAAa,GARO,4EAAH,qDAYrBI,GAdoB,CAerB,GAAE,CAACV,KAGF,2BACGK,IAAa,SAACU,EAAA,EAAD,IACbR,IAAS,cAAGS,UAAU,QAAb,SAAsBT,KAChC,wBACsB,IAAnBJ,EAAQc,OACPd,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAACvB,EAAD,YACE,0BAAI,WAASsB,MACb,uBAAIC,MAFWF,EADP,KAOZ,uBAAG,iDAKZ,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledList = styled.div`\n  list-style-type: none;\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/api';\nimport { StyledList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const findMovieDetail = async () => {\n      try {\n        setIsLoading(true);\n        const movieData = await fetchReviews(movieId);\n        setReviews(movieData.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    findMovieDetail();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <p className=\"error\">{error}</p>}\n      <ul>\n        {reviews.length !== 0 ? (\n          reviews.map(({ id, author, content }) => (\n            <StyledList key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </StyledList>\n          ))\n        ) : (\n          <p>We don't have any rewiews for this movie</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["StyledList","styled","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useEffect","findMovieDetail","fetchReviews","movieData","results","message","Loader","className","length","map","id","author","content"],"sourceRoot":""}