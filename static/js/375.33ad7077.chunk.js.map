{"version":3,"file":"static/js/375.33ad7077.chunk.js","mappings":"8RAEaA,EAAkBC,EAAAA,GAAAA,IAAH,wGAOfC,EAAsBD,EAAAA,GAAAA,IAAH,oHASnBE,EAAmBF,EAAAA,GAAAA,IAAH,kF,SCDvBG,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAgFrB,EA9EqB,WAAO,IAAD,IAEnBE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAE5CC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOK,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CAEA,IAAMU,EAAe,mCAAG,oGAEpBN,GAAa,GAFO,UAGIO,EAAAA,EAAAA,IAAkBX,GAHtB,OAGdY,EAHc,OAIpBJ,EAAaI,GAJO,gDAMpBN,EAAS,KAAMO,SANK,yBAQpBT,GAAa,GARO,4EAAH,qDAYrBM,GAdoB,CAerB,GAAE,CAACV,IAEJ,IAAQc,EAAyCP,EAAzCO,MAAOC,EAAkCR,EAAlCQ,YAAaC,EAAqBT,EAArBS,SAAUC,EAAWV,EAAXU,OAEtC,OACE,UAAC9B,EAAD,YACE,SAAC,KAAD,CAAM+B,GAAItB,EAAauB,QAAvB,SAAgC,YAE/BhB,IAAa,SAACiB,EAAA,EAAD,IACbf,IAAS,cAAGgB,UAAU,QAAb,SAAsBhB,IAE/BE,IACC,UAAClB,EAAD,YACE,gBAAKiC,IAAG,UAtCG,mCAsCH,OAAkBP,GAAeQ,IAAKT,KAC9C,iBAAKO,UAAU,UAAf,WACE,wBAAKP,KAEL,wBAAI,cACJ,uBAAIE,KACJ,wBAAI,YACJ,wBACGC,GACCA,EAAOO,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAChB,OAAO,wBAAcA,GAALD,EACjB,aAMX,UAACnC,EAAD,YACE,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAAS4B,GAAG,OAAZ,SAAmB,YAErB,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,SAAsB,qBAK5B,SAAC,EAAAS,SAAD,CAAUC,UAAU,SAACR,EAAA,EAAD,IAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOS,KAAK,OAAOC,SAAS,SAACvC,EAAD,OAC5B,SAAC,KAAD,CAAOsC,KAAK,UAAUC,SAAS,SAACrC,EAAD,aAKxC,C,8LC9FKsC,EAAU,CACdC,OAAQ,MAERC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,iEAErBN,GAH+B,uBACzBO,EADyB,EACzBA,KADyB,kBAK1BA,GAL0B,2CAAH,qDAQnBC,EAAmB,mCAAG,WAAMC,GAAN,yFACVH,EAAAA,EAAAA,IAAA,0DAC8BG,GACnDT,GAH+B,uBACzBO,EADyB,EACzBA,KADyB,kBAK1BA,GAL0B,2CAAH,sDAQnB3B,EAAiB,mCAAG,WAAMX,GAAN,yFACRqC,EAAAA,EAAAA,IAAA,6CACiBrC,GACtC+B,GAH6B,uBACvBO,EADuB,EACvBA,KADuB,kBAMxBA,GANwB,2CAAH,sDASjBG,EAAS,mCAAG,WAAMzC,GAAN,yFACAqC,EAAAA,EAAAA,IAAA,6CACiBrC,EADjB,YAErB+B,GAHqB,uBACfO,EADe,EACfA,KADe,kBAKhBA,GALgB,2CAAH,sDAQTI,EAAY,mCAAG,WAAM1C,GAAN,yFACHqC,EAAAA,EAAAA,IAAA,6CACiBrC,EADjB,YAErB+B,GAHwB,uBAClBO,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,qD","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  max-width: 1200px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 50px 15px;\n`;\n\nexport const StyledContainerList = styled.div`\n  display: flex;\n  gap: 30px;\n\n  width: 100%;\n  margin: 0 auto;\n  padding: 50px 15px;\n`;\n\nexport const StyledAdditional = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding: 50px 15px;\n`;\n","import { Loader } from 'components/Loader/Loader';\nimport { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\nimport {\n  StyledAdditional,\n  StyledContainer,\n  StyledContainerList,\n} from './MovieDetails.styled';\n\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const BaseImgUrl = 'https://image.tmdb.org/t/p/w400';\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movieById, setMovieById] = useState({});\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const findMovieDetail = async () => {\n      try {\n        setIsLoading(true);\n        const movieData = await fetchMovieDetails(movieId);\n        setMovieById(movieData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    findMovieDetail();\n  }, [movieId]);\n\n  const { title, poster_path, overview, genres } = movieById;\n\n  return (\n    <StyledContainer>\n      <Link to={backLinkHref.current}>Go Back</Link>\n\n      {isLoading && <Loader />}\n      {error && <p className=\"error\">{error}</p>}\n\n      {movieById && (\n        <StyledContainerList>\n          <img src={`${BaseImgUrl}${poster_path}`} alt={title} />\n          <div className=\"wrapper\">\n            <h1>{title}</h1>\n            {/* <p>User score:</p> */}\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <ul>\n              {genres &&\n                genres.map(({ id, name }) => {\n                  return <li key={id}>{name}</li>;\n                })}\n            </ul>\n          </div>\n        </StyledContainerList>\n      )}\n\n      <StyledAdditional>\n        <h2>Additional Information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n      </StyledAdditional>\n\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </StyledContainer>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  // url: 'https://api.themoviedb.org/3/authentication',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3OTQ4NDU5YzkwODljZDQyY2Q1MzYwY2JiNWMxNmEwNiIsInN1YiI6IjY1MjgxNWE0Mzc4MDYyMDEzOWExMjI5NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.4tvuZQaDxtSX7MEVnQ8Z9bY5zeIDO3IhkSXhrJbyhgM',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?language=en-US`,\n    options\n  );\n  return data;\n};\n\nexport const fetchSearchedMovies = async queryMovieName => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${queryMovieName}`,\n    options\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}`,\n    options\n  );\n\n  return data;\n};\n\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    options\n  );\n  return data;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n    options\n  );\n  return data;\n};\n"],"names":["StyledContainer","styled","StyledContainerList","StyledAdditional","Cast","lazy","Reviews","location","useLocation","backLinkHref","useRef","state","from","movieId","useParams","useState","isLoading","setIsLoading","error","setError","movieById","setMovieById","useEffect","findMovieDetail","fetchMovieDetails","movieData","message","title","poster_path","overview","genres","to","current","Loader","className","src","alt","map","id","name","Suspense","fallback","path","element","options","method","headers","accept","Authorization","fetchTrendingMovies","axios","data","fetchSearchedMovies","queryMovieName","fetchCast","fetchReviews"],"sourceRoot":""}